package com.viaversion.viaversion.api.minecraft.entities;

import com.google.common.base.Preconditions;
import com.viaversion.viaversion.api.protocol.Protocol;
import com.viaversion.viaversion.util.EntityTypeUtil;
import com.viaversion.viaversion.util.Key;
import java.util.Locale;
import org.checkerframework.checker.nullness.qual.Nullable;

public enum EntityTypes1_19 implements EntityType {
   ENTITY((EntityType)null, (String)null),
   AREA_EFFECT_CLOUD(ENTITY),
   END_CRYSTAL(ENTITY),
   EVOKER_FANGS(ENTITY),
   EXPERIENCE_ORB(ENTITY),
   EYE_OF_ENDER(ENTITY),
   FALLING_BLOCK(ENTITY),
   ITEM(ENTITY),
   TNT(ENTITY),
   MARKER(ENTITY),
   LIGHTNING_BOLT(ENTITY),
   HANGING_ENTITY(ENTITY, (String)null),
   LEASH_KNOT(HANGING_ENTITY),
   PAINTING(HANGING_ENTITY),
   ITEM_FRAME(HANGING_ENTITY),
   GLOW_ITEM_FRAME(ITEM_FRAME),
   PROJECTILE(ENTITY, (String)null),
   ITEM_PROJECTILE(PROJECTILE, (String)null),
   SNOWBALL(ITEM_PROJECTILE),
   ENDER_PEARL(ITEM_PROJECTILE),
   EGG(ITEM_PROJECTILE),
   POTION(ITEM_PROJECTILE),
   EXPERIENCE_BOTTLE(ITEM_PROJECTILE),
   FIREWORK_ROCKET(PROJECTILE),
   LLAMA_SPIT(PROJECTILE),
   SHULKER_BULLET(PROJECTILE),
   FISHING_BOBBER(PROJECTILE),
   WITHER_SKULL(PROJECTILE),
   DRAGON_FIREBALL(PROJECTILE),
   ABSTRACT_ARROW(PROJECTILE, (String)null),
   ARROW(ABSTRACT_ARROW),
   SPECTRAL_ARROW(ABSTRACT_ARROW),
   TRIDENT(ABSTRACT_ARROW),
   ABSTRACT_FIREBALL(ENTITY, (String)null),
   FIREBALL(ABSTRACT_FIREBALL),
   SMALL_FIREBALL(ABSTRACT_FIREBALL),
   VEHICLE(ENTITY, (String)null),
   BOAT(VEHICLE),
   ABSTRACT_MINECART(VEHICLE, (String)null),
   MINECART(ABSTRACT_MINECART),
   FURNACE_MINECART(ABSTRACT_MINECART),
   COMMAND_BLOCK_MINECART(ABSTRACT_MINECART),
   TNT_MINECART(ABSTRACT_MINECART),
   SPAWNER_MINECART(ABSTRACT_MINECART),
   CHEST_BOAT(BOAT),
   ABSTRACT_MINECART_CONTAINER(ABSTRACT_MINECART, (String)null),
   CHEST_MINECART(ABSTRACT_MINECART_CONTAINER),
   HOPPER_MINECART(ABSTRACT_MINECART_CONTAINER),
   LIVING_ENTITY(ENTITY, (String)null),
   ARMOR_STAND(LIVING_ENTITY),
   PLAYER(LIVING_ENTITY),
   MOB(LIVING_ENTITY, (String)null),
   ENDER_DRAGON(MOB),
   SLIME(MOB),
   MAGMA_CUBE(SLIME),
   AMBIENT_CREATURE(MOB, (String)null),
   BAT(AMBIENT_CREATURE),
   FLYING_MOB(MOB, (String)null),
   GHAST(FLYING_MOB),
   PHANTOM(FLYING_MOB),
   PATHFINDER_MOB(MOB, (String)null),
   ALLAY(PATHFINDER_MOB),
   ABSTRACT_GOLEM(PATHFINDER_MOB, (String)null),
   SNOW_GOLEM(ABSTRACT_GOLEM),
   IRON_GOLEM(ABSTRACT_GOLEM),
   SHULKER(ABSTRACT_GOLEM),
   WATER_ANIMAL(PATHFINDER_MOB, (String)null),
   DOLPHIN(WATER_ANIMAL),
   SQUID(WATER_ANIMAL),
   GLOW_SQUID(SQUID),
   ABSTRACT_FISH(WATER_ANIMAL, (String)null),
   PUFFERFISH(ABSTRACT_FISH),
   TADPOLE(ABSTRACT_FISH),
   ABSTRACT_SCHOOLING_FISH(ABSTRACT_FISH, (String)null),
   COD(ABSTRACT_SCHOOLING_FISH),
   SALMON(ABSTRACT_SCHOOLING_FISH),
   TROPICAL_FISH(ABSTRACT_SCHOOLING_FISH),
   ABSTRACT_AGEABLE(PATHFINDER_MOB, (String)null),
   ABSTRACT_VILLAGER(ABSTRACT_AGEABLE, (String)null),
   VILLAGER(ABSTRACT_VILLAGER),
   WANDERING_TRADER(ABSTRACT_VILLAGER),
   ABSTRACT_ANIMAL(ABSTRACT_AGEABLE, (String)null),
   AXOLOTL(ABSTRACT_ANIMAL),
   CHICKEN(ABSTRACT_ANIMAL),
   PANDA(ABSTRACT_ANIMAL),
   PIG(ABSTRACT_ANIMAL),
   POLAR_BEAR(ABSTRACT_ANIMAL),
   RABBIT(ABSTRACT_ANIMAL),
   SHEEP(ABSTRACT_ANIMAL),
   BEE(ABSTRACT_ANIMAL),
   TURTLE(ABSTRACT_ANIMAL),
   FOX(ABSTRACT_ANIMAL),
   FROG(ABSTRACT_ANIMAL),
   GOAT(ABSTRACT_ANIMAL),
   HOGLIN(ABSTRACT_ANIMAL),
   STRIDER(ABSTRACT_ANIMAL),
   COW(ABSTRACT_ANIMAL),
   MOOSHROOM(COW),
   TAMABLE_ANIMAL(ABSTRACT_ANIMAL, (String)null),
   CAT(TAMABLE_ANIMAL),
   OCELOT(TAMABLE_ANIMAL),
   WOLF(TAMABLE_ANIMAL),
   PARROT(TAMABLE_ANIMAL),
   ABSTRACT_HORSE(ABSTRACT_ANIMAL, (String)null),
   HORSE(ABSTRACT_HORSE),
   SKELETON_HORSE(ABSTRACT_HORSE),
   ZOMBIE_HORSE(ABSTRACT_HORSE),
   ABSTRACT_CHESTED_HORSE(ABSTRACT_HORSE, (String)null),
   DONKEY(ABSTRACT_CHESTED_HORSE),
   MULE(ABSTRACT_CHESTED_HORSE),
   LLAMA(ABSTRACT_CHESTED_HORSE),
   TRADER_LLAMA(LLAMA),
   ABSTRACT_MONSTER(PATHFINDER_MOB, (String)null),
   BLAZE(ABSTRACT_MONSTER),
   CREEPER(ABSTRACT_MONSTER),
   ENDERMITE(ABSTRACT_MONSTER),
   ENDERMAN(ABSTRACT_MONSTER),
   GIANT(ABSTRACT_MONSTER),
   SILVERFISH(ABSTRACT_MONSTER),
   VEX(ABSTRACT_MONSTER),
   WITHER(ABSTRACT_MONSTER),
   ZOGLIN(ABSTRACT_MONSTER),
   WARDEN(ABSTRACT_MONSTER),
   ABSTRACT_SKELETON(ABSTRACT_MONSTER, (String)null),
   SKELETON(ABSTRACT_SKELETON),
   STRAY(ABSTRACT_SKELETON),
   WITHER_SKELETON(ABSTRACT_SKELETON),
   ZOMBIE(ABSTRACT_MONSTER),
   DROWNED(ZOMBIE),
   HUSK(ZOMBIE),
   ZOMBIFIED_PIGLIN(ZOMBIE),
   ZOMBIE_VILLAGER(ZOMBIE),
   GUARDIAN(ABSTRACT_MONSTER),
   ELDER_GUARDIAN(GUARDIAN),
   SPIDER(ABSTRACT_MONSTER),
   CAVE_SPIDER(SPIDER),
   ABSTRACT_PIGLIN(ABSTRACT_MONSTER, (String)null),
   PIGLIN(ABSTRACT_PIGLIN),
   PIGLIN_BRUTE(ABSTRACT_PIGLIN),
   ABSTRACT_RAIDER(ABSTRACT_MONSTER, (String)null),
   WITCH(ABSTRACT_RAIDER),
   RAVAGER(ABSTRACT_RAIDER),
   ABSTRACT_ILLAGER(ABSTRACT_RAIDER, (String)null),
   SPELLCASTER_ILLAGER(ABSTRACT_ILLAGER, (String)null),
   VINDICATOR(ABSTRACT_ILLAGER),
   PILLAGER(ABSTRACT_ILLAGER),
   EVOKER(SPELLCASTER_ILLAGER),
   ILLUSIONER(SPELLCASTER_ILLAGER);

   private static final EntityType[] TYPES = EntityTypeUtil.createSizedArray(values());
   private final EntityType parent;
   private final String identifier;
   private int id = -1;

   private EntityTypes1_19(EntityType parent) {
      this.parent = parent;
      this.identifier = Key.namespaced(this.name().toLowerCase(Locale.ROOT));
   }

   private EntityTypes1_19(EntityType parent, String identifier) {
      this.parent = parent;
      this.identifier = identifier;
   }

   public int getId() {
      if (this.id == -1) {
         String var3 = this.name();
         throw new IllegalStateException("Ids have not been initialized yet (type " + var3 + ")");
      } else {
         return this.id;
      }
   }

   public String identifier() {
      Preconditions.checkArgument(this.identifier != null, "Called identifier method on abstract type");
      return this.identifier;
   }

   public @Nullable EntityType getParent() {
      return this.parent;
   }

   public boolean isAbstractType() {
      return this.identifier == null;
   }

   public static EntityType getTypeFromId(int typeId) {
      return EntityTypeUtil.getTypeFromId(TYPES, typeId, ENTITY);
   }

   public static void initialize(Protocol protocol) {
      EntityTypeUtil.initialize(values(), TYPES, protocol, (type, id) -> type.id = id);
   }

   // $FF: synthetic method
   private static EntityTypes1_19[] $values() {
      return new EntityTypes1_19[]{ENTITY, AREA_EFFECT_CLOUD, END_CRYSTAL, EVOKER_FANGS, EXPERIENCE_ORB, EYE_OF_ENDER, FALLING_BLOCK, ITEM, TNT, MARKER, LIGHTNING_BOLT, HANGING_ENTITY, LEASH_KNOT, PAINTING, ITEM_FRAME, GLOW_ITEM_FRAME, PROJECTILE, ITEM_PROJECTILE, SNOWBALL, ENDER_PEARL, EGG, POTION, EXPERIENCE_BOTTLE, FIREWORK_ROCKET, LLAMA_SPIT, SHULKER_BULLET, FISHING_BOBBER, WITHER_SKULL, DRAGON_FIREBALL, ABSTRACT_ARROW, ARROW, SPECTRAL_ARROW, TRIDENT, ABSTRACT_FIREBALL, FIREBALL, SMALL_FIREBALL, VEHICLE, BOAT, ABSTRACT_MINECART, MINECART, FURNACE_MINECART, COMMAND_BLOCK_MINECART, TNT_MINECART, SPAWNER_MINECART, CHEST_BOAT, ABSTRACT_MINECART_CONTAINER, CHEST_MINECART, HOPPER_MINECART, LIVING_ENTITY, ARMOR_STAND, PLAYER, MOB, ENDER_DRAGON, SLIME, MAGMA_CUBE, AMBIENT_CREATURE, BAT, FLYING_MOB, GHAST, PHANTOM, PATHFINDER_MOB, ALLAY, ABSTRACT_GOLEM, SNOW_GOLEM, IRON_GOLEM, SHULKER, WATER_ANIMAL, DOLPHIN, SQUID, GLOW_SQUID, ABSTRACT_FISH, PUFFERFISH, TADPOLE, ABSTRACT_SCHOOLING_FISH, COD, SALMON, TROPICAL_FISH, ABSTRACT_AGEABLE, ABSTRACT_VILLAGER, VILLAGER, WANDERING_TRADER, ABSTRACT_ANIMAL, AXOLOTL, CHICKEN, PANDA, PIG, POLAR_BEAR, RABBIT, SHEEP, BEE, TURTLE, FOX, FROG, GOAT, HOGLIN, STRIDER, COW, MOOSHROOM, TAMABLE_ANIMAL, CAT, OCELOT, WOLF, PARROT, ABSTRACT_HORSE, HORSE, SKELETON_HORSE, ZOMBIE_HORSE, ABSTRACT_CHESTED_HORSE, DONKEY, MULE, LLAMA, TRADER_LLAMA, ABSTRACT_MONSTER, BLAZE, CREEPER, ENDERMITE, ENDERMAN, GIANT, SILVERFISH, VEX, WITHER, ZOGLIN, WARDEN, ABSTRACT_SKELETON, SKELETON, STRAY, WITHER_SKELETON, ZOMBIE, DROWNED, HUSK, ZOMBIFIED_PIGLIN, ZOMBIE_VILLAGER, GUARDIAN, ELDER_GUARDIAN, SPIDER, CAVE_SPIDER, ABSTRACT_PIGLIN, PIGLIN, PIGLIN_BRUTE, ABSTRACT_RAIDER, WITCH, RAVAGER, ABSTRACT_ILLAGER, SPELLCASTER_ILLAGER, VINDICATOR, PILLAGER, EVOKER, ILLUSIONER};
   }
}
